{
    	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    	"contentVersion": "1.0.0.0",
    	"parameters" : {
      		"newStorageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue": "test-user",
			"metadata": {
				"description": "User name for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"dnsNameForPublicIP": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
			}
		},
		"ubuntuOSVersion": {
			"type": "string",
			"defaultValue": "14.04.2-LTS",
			"allowedValues": [
				"14.04.2-LTS",
				"14.10",
				"15.04"
			],
			"metadata": {
				"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.2-LTS, 12.04.3-LTS, 12.04.4-LTS, 12.04.5-LTS, 12.10, 14.04.2-LTS, 14.10, 15.04."
			}
		}
    },
    "variables": {
    		"location": "West US",
    		"storageAccountType": "Standard_LRS",
    		"publicIPAddressName": "PublicIP",
    		"availabilitySet": "availability-nodes-set",
    		"publicIPAddressType": "Dynamic",
    		"nicName": "VMNicNode",
    		"virtualNetworkName": "VNETNode",
		"subnetName": "subnet",
		"addressPrefix": "10.0.0.0/16",
		"subnetPrefix": "10.0.0.0/24",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
		"vmName": "VM",
		"vmSizeSlave": "Standard_D1",
		"imagePublisher": "Canonical",
		"imageOffer": "UbuntuServer",
		"OSDiskName": "osdiskforlinuxsimple",
		"vmStorageAccountContainerName": "vhds",
		"nsgName" : "nodeNSG",
		"nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
    },
    "resources": [
    	{
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[parameters('newStorageAccountName')]",
		"apiVersion": "2015-05-01-preview",
		"location": "[resourceGroup().location]",
		"properties": {
			"accountType": "[variables('storageAccountType')]"
		}
	},
	{
		"apiVersion": "2015-05-01-preview",
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[concat(variables('publicIPAddressName'), '1')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
			"dnsSettings": {
				"domainNameLabel": "[concat(parameters('dnsNameForPublicIP'), '1')]"
			}
		}
	},
	{
		"apiVersion": "2015-05-01-preview",
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[concat(variables('publicIPAddressName'), '2')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
			"dnsSettings": {
				"domainNameLabel": "[concat(parameters('dnsNameForPublicIP'), '2')]"
			}
		}
	},
	{
		"type": "Microsoft.Compute/availabilitySets",
		"name": "[variables('availabilitySet')]",
		"apiVersion": "2015-05-01-preview",
		"location": "[resourceGroup().location]",
		"properties": {}
    	},
        {
	        "apiVersion": "2015-05-01-preview",
	        "type": "Microsoft.Network/virtualNetworks",
	        "name": "[variables('virtualNetworkName')]",
	        "location": "[resourceGroup().location]",
	        "dependsOn": [
		            "[variables('nsgID')]"
			    ],
	              "properties": {
	                "addressSpace": {
	                  "addressPrefixes": [
	                    "[variables('addressPrefix')]"
	                  ]
	                },
	                "subnets": [
	                  {
	                    "name": "[variables('subnetName')]",
	                    "properties" : {
	                      "addressPrefix": "[variables('subnetPrefix')]",
			      "networkSecurityGroup" : {
			              "id": "[variables('nsgID')]"
			}
                    }
                  }
                ]
	     }
        },
    {
	"apiVersion": "2015-05-01-preview",
	"type": "Microsoft.Network/networkSecurityGroups",
	"name": "[variables('nsgName')]",
	"location": "[resourceGroup().location]",
	"properties": {
		"securityRules": [
			{
				"name": "SSH",
				"properties": {
					"description": "SSH endpoint",
					"protocol": "Tcp",
					"sourcePortRange": "*",
					"destinationPortRange": "22",
					"sourceAddressPrefix": "*",
					"destinationAddressPrefix": "*",
					"access": "Allow",
					"priority": 200,
					"direction": "Inbound"
				}
			}
			]
		}
	},
	{
		"apiVersion": "2015-05-01-preview",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'),'1')]",
		"location": "[resourceGroup().location]",
		"dependsOn": [
			"[concat('Microsoft.Network/publicIPAddresses/',concat(variables('publicIPAddressName'), '1'))]",
			"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
		],
		"properties": {
			"ipConfigurations": [
				{
					"name": "ipConfigSlave",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'), '1'))]"
						},
						"subnet": {
							"id": "[variables('subnetRef')]"
						}
					}
				}
			]
		}
	},
	{
		"apiVersion": "2015-05-01-preview",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'),'2')]",
		"location": "[resourceGroup().location]",
		"dependsOn": [
			"[concat('Microsoft.Network/publicIPAddresses/',concat(variables('publicIPAddressName'), '2'))]",
			"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
		],
		"properties": {
			"ipConfigurations": [
				{
					"name": "ipConfigSlave",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'), '2'))]"
						},
						"subnet": {
							"id": "[variables('subnetRef')]"
						}
					}
				}
			]
		}
	},
	{
		"apiVersion": "2015-05-01-preview",
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[concat(variables('vmName'), '1')]",
		"location": "[resourceGroup().location]",
		"dependsOn": [
			"[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
			"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
			"[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySet'))]"
		],
		"properties": {
			"availabilitySet": {
			          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet'))]"
			 },
			"hardwareProfile": {
				"vmSize": "[variables('vmSizeSlave')]"
			},
			"osProfile": {
				"computername": "[concat(variables('vmName'), '1')]",
				"adminUsername": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]"
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "[variables('imagePublisher')]",
					"offer": "[variables('imageOffer')]",
					"sku" : "[parameters('ubuntuOSVersion')]",
					"version":"latest"
				},
				"osDisk" : {
					"name": "osdisk",
					"vhd": {
						"uri": "[concat('http://', parameters('newStorageAccountName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), '1', '-osdisk.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				}
			},
			"networkProfile": {
				"networkInterfaces": [
					{
						"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), '1'))]"
					}
				]
			}
		}
	},
	{
		"apiVersion": "2015-05-01-preview",
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[concat(variables('vmName'), '2')]",
		"location": "[resourceGroup().location]",
		"dependsOn": [
			"[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
			"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]",
			"[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySet'))]"
		],
		"properties": {
			"availabilitySet": {
			          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet'))]"
			 },
			"hardwareProfile": {
				"vmSize": "[variables('vmSizeSlave')]"
			},
			"osProfile": {
				"computername": "[concat(variables('vmName'), '2')]",
				"adminUsername": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]"
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "[variables('imagePublisher')]",
					"offer": "[variables('imageOffer')]",
					"sku" : "[parameters('ubuntuOSVersion')]",
					"version":"latest"
				},
				"osDisk" : {
					"name": "osdisk",
					"vhd": {
						"uri": "[concat('http://', parameters('newStorageAccountName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), '2', '-osdisk.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				}
			},
			"networkProfile": {
				"networkInterfaces": [
					{
						"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), '2'))]"
					}
				]
			}
		}
	}
    ],
    "outputs": {
	"SwarmManagerHostName": {
			"type": "string",
			"value": "[concat(resourceGroup().id,'/providers/Microsoft.Compute/availabilitySets/', variables('availabilitySet'))]"
		},
	"SwarmManagerPort": {
			"type": "string",
			"value": "2376"
		}
	}	
}
