{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"newStorageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
			}
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "User name for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"dnsNameForPublicIP": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
			}
		},
		"ubuntuOSVersion": {
			"type": "string",
			"defaultValue": "14.10",
			"allowedValues": [
				"12.04.2-LTS",
				"12.04.3-LTS",
				"12.04.4-LTS",
				"12.04.5-LTS",
				"12.10",
				"14.04.2-LTS",
				"14.10",
				"15.04"
			],
			"metadata": {
				"description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.2-LTS, 12.04.3-LTS, 12.04.4-LTS, 12.04.5-LTS, 12.10, 14.04.2-LTS, 14.10, 15.04."
			}
		},
		"slaveCount": {
			"type": "int",
			"defaultValue": 2,
			"metadata": {
				"description": "Number of slave nodes"
			}
		}
	},
	"variables": {
		"extensionName": "DockerExtension",
		"location": "West US",
		"imagePublisher": "Canonical",
		"imageOffer": "UbuntuServer",
		"OSDiskName": "osdiskforconsul",
		"nicName": "consulNic",
		"addressPrefix": "10.0.0.0/16",
		"subnetName": "Subnet",
		"subnetPrefix": "10.0.0.0/24",
		"storageAccountType": "Standard_LRS",
		"publicIPAddressName": "consulIP",
		"publicIPAddressType": "Dynamic",
		"vmStorageAccountContainerName": "vhds",
		"vmName": "ConsulVM",
		"vmSize": "Standard_D1",
		"virtualNetworkName": "MyVNET",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[parameters('newStorageAccountName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[variables('location')]",
			"properties": {
				"accountType": "[variables('storageAccountType')]"
			}
		},
		{
			"name": "ClusterPublicIP",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "https://raw.githubusercontent.com/garimakhulbe/azure-template/master/thirdtemplate.json",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"dnsNameForPublicIP": { "value": "[parameters('dnsNameForPublicIP')]" }
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[concat(variables('publicIPAddressName'), copyIndex())]",
			"location": "[variables('location')]",
			"copy": {
				"name": "pubIpLoop",
				"count": "[parameters('slaveCount')]"
			},
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[concat(parameters('dnsNameForPublicIP'), copyIndex())]"
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('virtualNetworkName')]",
			"location": "[variables('location')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix')]"
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('nicName'), 'master')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"ClusterPublicIP",
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[reference('ClusterPublicIP').outputs.publicID.id.value]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('nicName'),copyIndex())]",
			"location": "[variables('location')]",
			"copy": {
				"name": "nicLoop",
				"count": "[parameters('slaveCount')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'), copyindex()))]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmName'), 'master')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), 'master')]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[variables('vmSize')]"
				},
				"osProfile": {
					"computername": "[concat(variables('vmName'), 'master')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku" : "[parameters('ubuntuOSVersion')]",
						"version":"latest"
					},
					"osDisk" : {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://', parameters('newStorageAccountName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), 'master-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), 'master'))]"
						}
					]
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmName'), copyIndex())]",
			"location": "[variables('location')]",
			"copy": {
				"name": "vmLoop",
				"count": "[parameters('slaveCount')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[variables('vmSize')]"
				},
				"osProfile": {
					"computername": "[concat(variables('vmName'), copyIndex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku" : "[parameters('ubuntuOSVersion')]",
						"version":"latest"
					},
					"osDisk" : {
						"name": "osdisk",
						"vhd": {
							"uri": "[concat('http://', parameters('newStorageAccountName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), copyIndex(), '-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), copyindex()))]"
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmName'), 'master', '/', variables('extensionName'))]",
			"apiVersion": "2015-05-01-preview",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), 'master')]",
				"ClusterPublicIP"
			],
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "DockerExtension",
				"typeHandlerVersion": "1.0",
				"settings": {
					"docker": {
						"port": "2375"
					},
					"compose": {
						"consul": {
							"image": "progrium/consul",
							"restart": "always",
							"command": "[concat('-server -advertise ', reference(concat(variables('nicName'), 'master')).ipConfigurations[0].properties.privateIPAddress, ' -advertise-wan ', reference('ClusterPublicIP').outputs.publicIP.value.ipAddress , ' -bootstrap-expect 3')]",
							"ports": ["8300:8300", "8301:8301", "8301:8301/udp", "8302:8302", "8302:8302/udp", "8400:8400", "8500:8500", "53:53/udp"]
						}
					}
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmName'), copyIndex(), '/', variables('extensionName'))]",
			"apiVersion": "2015-05-01-preview",
			"location": "[variables('location')]",
			"copy": {
				"name": "extLoop",
				"count": "[parameters('slaveCount')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]",
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]"
			],
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "DockerExtension",
				"typeHandlerVersion": "1.0",
				"settings": {
					"docker": {
						"port": "2375"
					},
					"compose": {
						"consul": {
							"image": "progrium/consul",
							"restart": "always",
							"command": "[concat('-server -advertise ', reference(concat(variables('nicName'), copyIndex())).ipConfigurations[0].properties.privateIPAddress, ' -join ', reference(concat(variables('nicName'), 'master')).ipConfigurations[0].properties.privateIPAddress)]",
							"ports": ["8300:8300", "8301:8301", "8301:8301/udp", "8302:8302", "8302:8302/udp", "8400:8400", "8500:8500", "53:53/udp"]
						}
					}
				}
			}
		}
	],
	"outputs": {
		"publicIP": {
			"type": "string",
			"value": "[reference('ClusterPublicIP').outputs.publicIP.value.ipAddress]"
		}
	}
}

